"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.active = exports.start = void 0;
const bolt_1 = require("@slack/bolt");
const express_1 = __importDefault(require("express"));
const moov_1 = require("./controllers/moov");
const env_1 = require("./services/env");
let application = null;
async function start(config) {
    const receiver = new bolt_1.ExpressReceiver({ signingSecret: config.slack.signingSecret });
    application = new bolt_1.App({ token: config.slack.token, receiver });
    application.action("inspectTransfer", env_1.Env.SlackService.showTransferDetails);
    receiver.router.use(express_1.default.json());
    receiver.router.use(express_1.default.urlencoded({ extended: true }));
    receiver.router.post("/webhooks", moov_1.handleWebhookEvent);
    receiver.router.get("/ping", async (_, res) => res.sendStatus(200));
    receiver.router.use((req, res, next) => {
        res.status(404).send("Not found");
    });
    await application.start(config.port);
    console.log(`listening on port ${config.port}`);
}
exports.start = start;
function active() {
    return application;
}
exports.active = active;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYXBwbGljYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0NBQW1EO0FBQ25ELHNEQUE4QjtBQUc5Qiw2Q0FBd0Q7QUFDeEQsd0NBQXFDO0FBRXJDLElBQUksV0FBVyxHQUFlLElBQUksQ0FBQztBQUU1QixLQUFLLFVBQVUsS0FBSyxDQUFDLE1BQXFCO0lBQy9DLE1BQU0sUUFBUSxHQUFHLElBQUksc0JBQWUsQ0FBQyxFQUFFLGFBQWEsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7SUFDcEYsV0FBVyxHQUFHLElBQUksVUFBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFFL0QsV0FBVyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxTQUFHLENBQUMsWUFBWSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFFNUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3BDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFPLENBQUMsVUFBVSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUU1RCxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUseUJBQWtCLENBQUMsQ0FBQztJQUN0RCxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNwRSxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7UUFDckMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDcEMsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFqQkQsc0JBaUJDO0FBRUQsU0FBZ0IsTUFBTTtJQUNwQixPQUFPLFdBQWtCLENBQUM7QUFDNUIsQ0FBQztBQUZELHdCQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwLCBFeHByZXNzUmVjZWl2ZXIgfSBmcm9tIFwiQHNsYWNrL2JvbHRcIjtcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5cbmltcG9ydCB7IENvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uXCI7XG5pbXBvcnQgeyBoYW5kbGVXZWJob29rRXZlbnQgfSBmcm9tIFwiLi9jb250cm9sbGVycy9tb292XCI7XG5pbXBvcnQgeyBFbnYgfSBmcm9tIFwiLi9zZXJ2aWNlcy9lbnZcIjtcblxubGV0IGFwcGxpY2F0aW9uOiBBcHAgfCBudWxsID0gbnVsbDtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN0YXJ0KGNvbmZpZzogQ29uZmlndXJhdGlvbikge1xuICBjb25zdCByZWNlaXZlciA9IG5ldyBFeHByZXNzUmVjZWl2ZXIoeyBzaWduaW5nU2VjcmV0OiBjb25maWcuc2xhY2suc2lnbmluZ1NlY3JldCB9KTtcbiAgYXBwbGljYXRpb24gPSBuZXcgQXBwKHsgdG9rZW46IGNvbmZpZy5zbGFjay50b2tlbiwgcmVjZWl2ZXIgfSk7XG5cbiAgYXBwbGljYXRpb24uYWN0aW9uKFwiaW5zcGVjdFRyYW5zZmVyXCIsIEVudi5TbGFja1NlcnZpY2Uuc2hvd1RyYW5zZmVyRGV0YWlscyk7XG5cbiAgcmVjZWl2ZXIucm91dGVyLnVzZShleHByZXNzLmpzb24oKSk7XG4gIHJlY2VpdmVyLnJvdXRlci51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG4gIHJlY2VpdmVyLnJvdXRlci5wb3N0KFwiL3dlYmhvb2tzXCIsIGhhbmRsZVdlYmhvb2tFdmVudCk7XG4gIHJlY2VpdmVyLnJvdXRlci5nZXQoXCIvcGluZ1wiLCBhc3luYyAoXywgcmVzKSA9PiByZXMuc2VuZFN0YXR1cygyMDApKTtcbiAgcmVjZWl2ZXIucm91dGVyLnVzZSgocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChcIk5vdCBmb3VuZFwiKTtcbiAgfSk7XG5cbiAgYXdhaXQgYXBwbGljYXRpb24uc3RhcnQoY29uZmlnLnBvcnQpO1xuICBjb25zb2xlLmxvZyhgbGlzdGVuaW5nIG9uIHBvcnQgJHtjb25maWcucG9ydH1gKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGl2ZSgpOiBBcHAge1xuICByZXR1cm4gYXBwbGljYXRpb24gYXMgQXBwO1xufVxuIl19